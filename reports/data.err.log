Traceback (most recent call last):
  File "C:\Users\karen\anaconda3\envs\myenv\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\karen\anaconda3\envs\myenv\lib\site-packages\nbclient\client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\karen\anaconda3\envs\myenv\lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\karen\anaconda3\envs\myenv\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\karen\anaconda3\envs\myenv\lib\site-packages\nbclient\client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "C:\Users\karen\anaconda3\envs\myenv\lib\site-packages\nbclient\client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\karen\anaconda3\envs\myenv\lib\site-packages\nbclient\client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ts2['BookingID_Date_fix'] = ts2.index
ts2['BookingID_Date_fix'] = ts2['BookingID_Date_fix'].dt.strftime('%Y-%m')
ts2.index = ts2['BookingID_Date_fix']
frecuencia = pd.infer_freq(ts2.index)
print("Frecuencia: ", frecuencia)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mAttributeError[0m                            Traceback (most recent call last)
Cell [1;32mIn[25], line 2[0m
[0;32m      1[0m ts2[[38;5;124m'[39m[38;5;124mBookingID_Date_fix[39m[38;5;124m'[39m] [38;5;241m=[39m ts2[38;5;241m.[39mindex
[1;32m----> 2[0m ts2[[38;5;124m'[39m[38;5;124mBookingID_Date_fix[39m[38;5;124m'[39m] [38;5;241m=[39m [43mts2[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mBookingID_Date_fix[39;49m[38;5;124;43m'[39;49m[43m][49m[38;5;241;43m.[39;49m[43mdt[49m[38;5;241m.[39mstrftime([38;5;124m'[39m[38;5;124m%[39m[38;5;124mY-[39m[38;5;124m%[39m[38;5;124mm[39m[38;5;124m'[39m)
[0;32m      3[0m ts2[38;5;241m.[39mindex [38;5;241m=[39m ts2[[38;5;124m'[39m[38;5;124mBookingID_Date_fix[39m[38;5;124m'[39m]
[0;32m      4[0m frecuencia [38;5;241m=[39m pd[38;5;241m.[39minfer_freq(ts2[38;5;241m.[39mindex)

File [1;32m~\anaconda3\envs\myenv\lib\site-packages\pandas\core\generic.py:6202[0m, in [0;36mNDFrame.__getattr__[1;34m(self, name)[0m
[0;32m   6195[0m [38;5;28;01mif[39;00m (
[0;32m   6196[0m     name [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_internal_names_set
[0;32m   6197[0m     [38;5;129;01mand[39;00m name [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_metadata
[0;32m   6198[0m     [38;5;129;01mand[39;00m name [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_accessors
[0;32m   6199[0m     [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39m_info_axis[38;5;241m.[39m_can_hold_identifiers_and_holds_name(name)
[0;32m   6200[0m ):
[0;32m   6201[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[name]
[1;32m-> 6202[0m [38;5;28;01mreturn[39;00m [38;5;28;43mobject[39;49m[38;5;241;43m.[39;49m[38;5;21;43m__getattribute__[39;49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mname[49m[43m)[49m

File [1;32m~\anaconda3\envs\myenv\lib\site-packages\pandas\core\accessor.py:224[0m, in [0;36mCachedAccessor.__get__[1;34m(self, obj, cls)[0m
[0;32m    221[0m [38;5;28;01mif[39;00m obj [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m    222[0m     [38;5;66;03m# we're accessing the attribute of the class, i.e., Dataset.geo[39;00m
[0;32m    223[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_accessor
[1;32m--> 224[0m accessor_obj [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_accessor[49m[43m([49m[43mobj[49m[43m)[49m
[0;32m    225[0m [38;5;66;03m# Replace the property with the accessor object. Inspired by:[39;00m
[0;32m    226[0m [38;5;66;03m# https://www.pydanny.com/cached-property.html[39;00m
[0;32m    227[0m [38;5;66;03m# We need to use object.__setattr__ because we overwrite __setattr__ on[39;00m
[0;32m    228[0m [38;5;66;03m# NDFrame[39;00m
[0;32m    229[0m [38;5;28mobject[39m[38;5;241m.[39m[38;5;21m__setattr__[39m(obj, [38;5;28mself[39m[38;5;241m.[39m_name, accessor_obj)

File [1;32m~\anaconda3\envs\myenv\lib\site-packages\pandas\core\indexes\accessors.py:608[0m, in [0;36mCombinedDatetimelikeProperties.__new__[1;34m(cls, data)[0m
[0;32m    605[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data[38;5;241m.[39mdtype, PeriodDtype):
[0;32m    606[0m     [38;5;28;01mreturn[39;00m PeriodProperties(data, orig)
[1;32m--> 608[0m [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m([38;5;124m"[39m[38;5;124mCan only use .dt accessor with datetimelike values[39m[38;5;124m"[39m)

[1;31mAttributeError[0m: Can only use .dt accessor with datetimelike values
AttributeError: Can only use .dt accessor with datetimelike values

